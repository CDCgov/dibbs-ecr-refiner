{"openapi": "3.1.0", "info": {"title": "DIBBs eCR Refiner", "description": "Please visit the repo for more info: https://github.com/CDCgov/dibbs-ecr-refiner", "version": "1.0.0"}, "paths": {"/api/user": {"get": {"tags": ["user"], "summary": "Get User", "description": "Returns the current logged-in user's information.\n\nReads user info from the session or token.\n\nReturns:\n    JSON object with user claims if authenticated.\n\nRaises:\n    HTTPException 401 if user not authenticated.", "operationId": "getUser", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/UserResponse"}, {"type": "null"}], "title": "Response Getuser"}}}}}}}, "/api/v1/conditions/": {"get": {"tags": ["conditions"], "summary": "Get Conditions", "description": "Fetches all available conditions from the database.\n\nArgs:\n    db (AsyncDatabaseConnection): Database connection.\n\nReturns:\n    list[Condition]: List of all conditions.", "operationId": "getConditions", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/GetConditionsResponse"}, "type": "array", "title": "Response Getconditions"}}}}}}}, "/api/v1/conditions/{condition_id}": {"get": {"tags": ["conditions"], "summary": "Get Condition", "description": "Returns information about a given condition.\n\nArgs:\n    condition_id (UUID): ID of the condition\n    db (AsyncDatabaseConnection): Database connection.\n\nRaises:\n    HTTPException: 404 if no condition is found\n\nReturns:\n    GetCondition: Info about the condition", "operationId": "getCondition", "parameters": [{"name": "condition_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Condition Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetConditionResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/": {"get": {"tags": ["configurations"], "summary": "Get Configurations", "description": "Returns a list of configurations based on the logged-in user.\n\nReturns:\n    List of configuration objects.", "operationId": "getConfigurations", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"items": {"$ref": "#/components/schemas/GetConfigurationsResponse"}, "type": "array", "title": "Response Getconfigurations"}}}}}}, "post": {"tags": ["configurations"], "summary": "Create Configuration", "description": "Create a new configuration for a jurisdiction.", "operationId": "createConfiguration", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateConfigInput"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CreateConfigurationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/{configuration_id}": {"get": {"tags": ["configurations"], "summary": "Get Configuration", "description": "Get a single configuration by its ID including all associated conditions.", "operationId": "getConfiguration", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GetConfigurationResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/{configuration_id}/export": {"get": {"tags": ["configurations"], "summary": "Get Configuration Export", "description": "Create a CSV export of a configuration and all associated codes.", "operationId": "getConfigurationExport", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}], "responses": {"200": {"description": "Successful Response"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/{configuration_id}/code-sets": {"put": {"tags": ["configurations"], "summary": "Associate Condition Codeset With Configuration", "description": "Associate a specified code set with the given configuration.\n\nArgs:\n    configuration_id (UUID): ID of the configuration\n    body (AssociateCodesetInput): payload containing a condition_id\n    user (dict[str, Any], optional): User making the request\n    db (AsyncDatabaseConnection, optional): Database connection\n\nRaises:\n    HTTPException: 404 if configuration is not found in JD\n    HTTPException: 404 if condition is not found\n    HTTPException: 500 if configuration is cannot be updated\n\nReturns:\n    AssociateCodesetResponse: ID of updated configuration, the full list of included conditions,\n          and the condition_name", "operationId": "associateConditionWithConfiguration", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssociateCodesetInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssociateCodesetResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/{configuration_id}/code-sets/{condition_id}": {"delete": {"tags": ["configurations"], "summary": "Remove Condition Codeset From Configuration", "description": "Remove a specified code set from the given configuration.\n\nArgs:\n    configuration_id (UUID): ID of the configuration\n    condition_id (UUID): ID of the condition to remove\n    user (DbUser): User making the request\n    db (AsyncDatabaseConnection): Database connection\n\nRaises:\n    HTTPException: 404 if configuration is not found in JD\n    HTTPException: 404 if condition is not found\n    HTTPException: 409 if trying to remove the main condition\n    HTTPException: 500 if configuration is cannot be updated\n\nReturns:\n    AssociateCodesetResponse: ID of updated configuration and the full list\n    of included conditions plus condition_name", "operationId": "disassociateConditionWithConfiguration", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}, {"name": "condition_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Condition Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AssociateCodesetResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/{configuration_id}/custom-codes": {"post": {"tags": ["configurations"], "summary": "Add Custom Code", "description": "Add a user-defined custom code to a configuration.\n\nArgs:\n    configuration_id (UUID): The ID of the configuration to update.\n    body (AddCustomCodeInput): The custom code information provided by the user.\n    user (dict[str, Any]): The logged-in user.\n    db (AsyncDatabaseConnection): The database connection.\n\nRaises:\n    HTTPException: 404 if configuration isn't found\n    HTTPException: 500 if custom code can't be added\n\nReturns:\n    ConfigurationCustomCodeResponse: Updated configuration", "operationId": "addCustomCodeToConfiguration", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddCustomCodeInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConfigurationCustomCodeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["configurations"], "summary": "Edit Custom Code", "description": "Modify a configuration's custom code based on system/code pair.\n\nArgs:\n    configuration_id (UUID): The ID of the configuration to modify.\n    body (UpdateCustomCodeInput): User-provided object containing custom code info.\n    user (dict[str, Any]): The logged-in user.\n    db (AsyncDatabaseConnection): The database connection.\n\nRaises:\n    HTTPException: 400 if a system is not provided\n    HTTPException: 400 if a code is not provided\n    HTTPException: 404 if the configuration can't be found\n    HTTPException: 500 if the configuration can't be updated\n\nReturns:\n    ConfigurationCustomCodeResponse: The updated configuration.", "operationId": "editCustomCodeFromConfiguration", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateCustomCodeInput"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConfigurationCustomCodeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/{configuration_id}/custom-codes/{system}/{code}": {"delete": {"tags": ["configurations"], "summary": "Delete Custom Code", "description": "Delete a custom code from a configuration.\n\nArgs:\n    configuration_id (UUID): The ID of the configuration to modify.\n    system (str): System of the custom code.\n    code (str): Code of the custom code.\n    user (dict[str, Any]): The logged-in user.\n    db (AsyncDatabaseConnection): The database connection.\n\nRaises:\n    HTTPException: 400 if system is not provided\n    HTTPException: 400 if code is not provided\n    HTTPException: 404 if configuration can't be found\n    HTTPException: 500 if configuration can't be updated\n\nReturns:\n    ConfigurationCustomCodeResponse: The updated configuration", "operationId": "deleteCustomCodeFromConfiguration", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}, {"name": "system", "in": "path", "required": true, "schema": {"type": "string", "title": "System"}}, {"name": "code", "in": "path", "required": true, "schema": {"type": "string", "title": "Code"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConfigurationCustomCodeResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/test": {"post": {"tags": ["configurations"], "summary": "Run Configuration Test", "description": "Runs an in-line test using the provided configuration ID and test files.\n\nArgs:\n    id (UUID): ID of Configuration to use for the test\n    uploaded_file (UploadFile | None): user uploaded eICR/RR pair\n    create_output_zip (Callable[..., tuple[str, io.BytesIO]]): service to create an in-memory zip file\n    upload_refined_files_to_s3 (Callable[[UUID, io.BytesIO, str, Logger], str]): service to upload a zip to S3\n    user (DbUser): Logged in user\n    db (AsyncDatabaseConnection): Database connection\n    sample_zip_path (Path): Path to example .zip eICR/RR pair\n    logger (Logger): Standard logger\nReturns:\n    ConfigurationTestResponse: response given to the client", "operationId": "runInlineConfigurationTest", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_runInlineConfigurationTest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConfigurationTestResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/configurations/{configuration_id}/section-processing": {"patch": {"tags": ["configurations"], "summary": "Update Section Processing", "description": "Update one or more section_processing entries for a configuration.\n\nArgs:\n    configuration_id (UUID): ID of the configuration to update\n    payload (UpdateSectionProcessingPayload): List of section updates with code and action\n    user (DbUser): The logged-in user\n    db (AsyncDatabaseConnection): Database connection\n\nRaises:\n    HTTPException: 404 if configuration isn't found\n    HTTPException: 500 if section processing can't be updated\n\nReturns:\n    UpdateSectionProcessingResponse: The message to show the user", "operationId": "updateConfigurationSectionProcessing", "parameters": [{"name": "configuration_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Configuration Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateSectionProcessingPayload"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateSectionProcessingResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/demo/upload": {"post": {"tags": ["demo"], "summary": "Demo Upload", "description": "Grabs an eCR zip file from the file system and runs it through the upload/refine process.", "operationId": "uploadEcr", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_uploadEcr"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RefinedTestingDocument"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/demo/download": {"get": {"summary": "Demo Download", "description": "Download the unrefined sample eCR zip file.", "operationId": "demo_download_api_v1_demo_download_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}}, "components": {"schemas": {"AddCustomCodeInput": {"properties": {"code": {"type": "string", "title": "Code"}, "system": {"type": "string", "enum": ["loinc", "snomed", "icd-10", "rxnorm"], "title": "System"}, "name": {"type": "string", "title": "Name"}}, "type": "object", "required": ["code", "system", "name"], "title": "AddCustomCodeInput", "description": "Input model for adding a custom code to a configuration."}, "AssociateCodesetInput": {"properties": {"condition_id": {"type": "string", "format": "uuid", "title": "Condition Id"}}, "type": "object", "required": ["condition_id"], "title": "AssociateCodesetInput", "description": "Condition association input model."}, "AssociateCodesetResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "included_conditions": {"items": {"$ref": "#/components/schemas/ConditionEntry"}, "type": "array", "title": "Included Conditions"}, "condition_name": {"type": "string", "title": "Condition Name"}}, "type": "object", "required": ["id", "included_conditions", "condition_name"], "title": "AssociateCodesetResponse"}, "Body_runInlineConfigurationTest": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "uploaded_file": {"anyOf": [{"type": "string", "format": "binary"}, {"type": "null"}], "title": "Uploaded File"}}, "type": "object", "required": ["id"], "title": "Body_runInlineConfigurationTest"}, "Body_uploadEcr": {"properties": {"uploaded_file": {"anyOf": [{"type": "string", "format": "binary"}, {"type": "null"}], "title": "Uploaded File"}}, "type": "object", "title": "Body_uploadEcr"}, "Condition": {"properties": {"code": {"type": "string", "title": "Code"}, "display_name": {"type": "string", "title": "Display Name"}, "refined_eicr": {"type": "string", "title": "Refined Eicr"}, "stats": {"items": {"type": "string"}, "type": "array", "title": "Stats"}}, "type": "object", "required": ["code", "display_name", "refined_eicr", "stats"], "title": "Condition"}, "ConditionEntry": {"properties": {"canonical_url": {"type": "string", "title": "Canonical Url"}, "version": {"type": "string", "title": "Version"}}, "type": "object", "required": ["canonical_url", "version"], "title": "ConditionEntry"}, "ConfigurationCustomCodeResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "display_name": {"type": "string", "title": "Display Name"}, "code_sets": {"items": {"$ref": "#/components/schemas/DbTotalConditionCodeCount"}, "type": "array", "title": "Code Sets"}, "custom_codes": {"items": {"$ref": "#/components/schemas/DbConfigurationCustomCode"}, "type": "array", "title": "Custom Codes"}}, "type": "object", "required": ["id", "display_name", "code_sets", "custom_codes"], "title": "ConfigurationCustomCodeResponse"}, "ConfigurationTestResponse": {"properties": {"original_eicr": {"type": "string", "title": "Original Eicr"}, "refined_download_url": {"type": "string", "title": "Refined Download Url"}, "condition": {"$ref": "#/components/schemas/Condition"}}, "type": "object", "required": ["original_eicr", "refined_download_url", "condition"], "title": "ConfigurationTestResponse"}, "CreateConfigInput": {"properties": {"condition_id": {"type": "string", "format": "uuid", "title": "Condition Id"}}, "type": "object", "required": ["condition_id"], "title": "CreateConfigInput", "description": "Body required to create a new configuration."}, "CreateConfigurationResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "name": {"type": "string", "title": "Name"}}, "type": "object", "required": ["id", "name"], "title": "CreateConfigurationResponse"}, "DbConfigurationCustomCode": {"properties": {"code": {"type": "string", "title": "Code"}, "system": {"type": "string", "enum": ["LOINC", "SNOMED", "ICD-10", "RxNorm"], "title": "System"}, "name": {"type": "string", "title": "Name"}}, "type": "object", "required": ["code", "system", "name"], "title": "DbConfigurationCustomCode"}, "DbConfigurationSectionProcessing": {"properties": {"name": {"type": "string", "title": "Name"}, "code": {"type": "string", "title": "Code"}, "action": {"type": "string", "title": "Action"}}, "type": "object", "required": ["name", "code", "action"], "title": "DbConfigurationSectionProcessing"}, "DbTotalConditionCodeCount": {"properties": {"condition_id": {"type": "string", "format": "uuid", "title": "Condition Id"}, "display_name": {"type": "string", "title": "Display Name"}, "total_codes": {"type": "integer", "title": "Total Codes"}}, "type": "object", "required": ["condition_id", "display_name", "total_codes"], "title": "DbTotalConditionCodeCount"}, "GetConditionCode": {"properties": {"code": {"type": "string", "title": "Code"}, "system": {"type": "string", "title": "System"}, "description": {"type": "string", "title": "Description"}}, "type": "object", "required": ["code", "system", "description"], "title": "GetConditionCode"}, "GetConditionResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "display_name": {"type": "string", "title": "Display Name"}, "available_systems": {"items": {"type": "string"}, "type": "array", "title": "Available Systems"}, "codes": {"items": {"$ref": "#/components/schemas/GetConditionCode"}, "type": "array", "title": "Codes"}}, "type": "object", "required": ["id", "display_name", "available_systems", "codes"], "title": "GetConditionResponse"}, "GetConditionsResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "display_name": {"type": "string", "title": "Display Name"}}, "type": "object", "required": ["id", "display_name"], "title": "GetConditionsResponse"}, "GetConfigurationResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "display_name": {"type": "string", "title": "Display Name"}, "code_sets": {"items": {"$ref": "#/components/schemas/DbTotalConditionCodeCount"}, "type": "array", "title": "Code Sets"}, "included_conditions": {"items": {"$ref": "#/components/schemas/IncludedCondition"}, "type": "array", "title": "Included Conditions"}, "custom_codes": {"items": {"$ref": "#/components/schemas/DbConfigurationCustomCode"}, "type": "array", "title": "Custom Codes"}, "section_processing": {"items": {"$ref": "#/components/schemas/DbConfigurationSectionProcessing"}, "type": "array", "title": "Section Processing"}}, "type": "object", "required": ["id", "display_name", "code_sets", "included_conditions", "custom_codes", "section_processing"], "title": "GetConfigurationResponse"}, "GetConfigurationsResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "name": {"type": "string", "title": "Name"}, "is_active": {"type": "boolean", "title": "Is Active"}}, "type": "object", "required": ["id", "name", "is_active"], "title": "GetConfigurationsResponse"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "IncludedCondition": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "display_name": {"type": "string", "title": "Display Name"}, "canonical_url": {"type": "string", "title": "Canonical Url"}, "version": {"type": "string", "title": "Version"}, "associated": {"type": "boolean", "title": "Associated"}}, "type": "object", "required": ["id", "display_name", "canonical_url", "version", "associated"], "title": "IncludedCondition"}, "RefinedTestingDocument": {"properties": {"message": {"type": "string", "title": "Message"}, "conditions_found": {"type": "integer", "title": "Conditions Found"}, "conditions": {"items": {"$ref": "#/components/schemas/Condition"}, "type": "array", "title": "Conditions"}, "unrefined_eicr": {"type": "string", "title": "Unrefined Eicr"}, "processing_notes": {"items": {"type": "string"}, "type": "array", "title": "Processing Notes"}, "refined_download_url": {"type": "string", "title": "Refined Download Url"}}, "type": "object", "required": ["message", "conditions_found", "conditions", "unrefined_eicr", "processing_notes", "refined_download_url"], "title": "RefinedTestingDocument"}, "UpdateCustomCodeInput": {"properties": {"system": {"type": "string", "title": "System"}, "code": {"type": "string", "title": "Code"}, "new_code": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "New Code"}, "new_system": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "New System"}, "new_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "New Name"}}, "type": "object", "required": ["system", "code", "new_code", "new_system", "new_name"], "title": "UpdateCustomCodeInput", "description": "Input model when updating a config's custom code."}, "UpdateSectionProcessingEntry": {"properties": {"code": {"type": "string", "title": "Code"}, "action": {"type": "string", "enum": ["retain", "refine", "remove"], "title": "Action"}}, "type": "object", "required": ["code", "action"], "title": "UpdateSectionProcessingEntry", "description": "Model for a single section processing update."}, "UpdateSectionProcessingPayload": {"properties": {"sections": {"items": {"$ref": "#/components/schemas/UpdateSectionProcessingEntry"}, "type": "array", "title": "Sections"}}, "type": "object", "required": ["sections"], "title": "UpdateSectionProcessingPayload", "description": "Payload for updating section processing entries."}, "UpdateSectionProcessingResponse": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "UpdateSectionProcessingResponse"}, "UserResponse": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "username": {"type": "string", "title": "Username"}}, "type": "object", "required": ["id", "username"], "title": "UserResponse", "description": "User information to send to the client."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}